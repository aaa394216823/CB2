mk_plot("Gfap",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Cnp",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Mbp",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Nrn1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Gad67",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Mpp3",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Vipr2",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Rbp4",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Lypd1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
load("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/PBMC.RData")
load("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/PBMC68K.RData")
PBMC68K_knee <- barcodeRanks(PBMC68K_r,lower = 100)@metadata$knee
PBMC68K_knee <- barcodeRanks(PBMC_r,lower = 100)@metadata$knee
PBMC68K_knee
set.seed(SEED)
eOut <- emptyDrops(PBMC_r,lower=100)
PBMC_ED <- PBMC_r[,ifelse(is.na(eOut$FDR),FALSE,eOut$FDR<=0.01)]
set.seed(SEED)
PBMC_CB2Out <- CB2FindCell(PBMC_r)
diff_PBMC <- barcode_diff(PBMC_cor,PBMC_ED)
PBMC_cor <- GetCellMat(PBMC_CB2Out)
diff_PBMC <- barcode_diff(PBMC_cor,PBMC_ED)
str(PBMC_CB2Out)
setdiff(setdiff(g3,nknee),nbg)
mk_plot("Cnih2",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Rsmd8",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Psmd8",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Gng3",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Chchd1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Mff",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Prdx5",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
setdiff(setdiff(g3,nknee),g8)
mk_plot("Ndufb2",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Bex4",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Fis1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Serp2",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Snrpn",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
head(g3)
mk_plot("Stmn1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("mt",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("count",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
setdiff(setdiff(g9,nknee),nbg)
mk_plot("Opcml",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
setdiff(setdiff(g9,nknee),nbg)[1:100]
mk_plot("Islr2",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Cck",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Slc24a5",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Pcsk1n",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("PISD",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Epha5",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Robo2",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Grik1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Synpr",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Rbfox1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Pclo",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Sox9",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Atp1a2",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Actb",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Chn1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("MAP1B",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Map1b",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Calm1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Tac1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Gad1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Gad2",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Sox6",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Slit2",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Vip",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Cxcl14",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Gap43",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Nrgn",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Calm3",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Slc17a7",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Bdp",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Bdp1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Znf91",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Id4",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Dock5",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Dock10",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Anln",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Cnp",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Scd",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Robo2",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
setdiff(setdiff(g9,nknee),nbg)[1:100]
mk_plot("Acp1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Slc24a5",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Scd2",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Ndn",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Nop56",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Sf3b1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Chl1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Fdps",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Cpe",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Dad1",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Pcsk1n",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
mk_plot("Syt4",diff_dat = diff_mbrain, dat_tsne_n1 = mbrain_tsne_n1,dat_f = mbrain_f)
prob <- runif(10000)
prob <- prob/sum(prob)
plot(prob,type="bar")
plot(prob,type="bar")
plot(prob,type="b")
str(prob)
prob <- runif(1000)
prob <- prob/sum(prob)
plot(prob,type="b")
plot(prob,type="l")
plot(prob,type="bar")
barplot(prob)
barplot(prob)
install.packages("entropy")
entropy::entropy(prob)
prob <- runif(1000)^2
prob <- prob/sum(prob)
plot(prob,type="bar")
entropy::entropy(prob)
prob <- runif(500)^2
prob <- prob/sum(prob)
plot(prob,type="bar")
plot(prob,type="bar")
barplot(prob)
entropy::entropy(prob)
dpois(1)
dpois(1,lambda = 1)
dpois(1:100,lambda = 1)
dpois(1:100,lambda = 100)
dpois(1:100,lambda = 50)
prob <- dpois(1:100,lambda = 50)
prob <- prob/sum(prob)
barplot(prob)
barplot(prob)
?dnbinom
prob <- dnbinom(1:100, size = 100, prob=0.5)
prob <- prob/sum(prob)
barplot(prob)
prob <- dnbinom(1:100, size = 50, prob=0.5)
prob <- prob/sum(prob)
barplot(prob)
prob <- dnbinom(1:100, size = 50, prob=0.8)
prob <- prob/sum(prob)
barplot(prob)
prob <- dnorm(1:100, sd = 1)
prob <- prob/sum(prob)
barplot(prob)
prob <- dnorm(1:100/100, sd = 1)
prob <- dnorm(1:100/100, sd = 1)
prob <- prob/sum(prob)
barplot(prob)
prob <- dnorm(1:100/100, sd = runif(1))
prob <- prob/sum(prob)
barplot(prob)
prob <- dnorm(1:100/100, sd = runif(1))
prob <- prob/sum(prob)
barplot(prob)
prob <- dnorm(1:100/100, sd = runif(1,1,2))
prob <- prob/sum(prob)
barplot(prob)
prob <- dnorm(1:100/100, sd = runif(1,0,2))
prob <- prob/sum(prob)
barplot(prob)
prob <- dnorm(1:100/100, sd = runif(1,0,2))
prob <- prob/sum(prob)
barplot(prob)
prob <- dnorm(1:100/100, sd = runif(1,0,1))
prob <- prob/sum(prob)
barplot(prob)
prob <- dnorm(1:100/100, sd = runif(1,0,1))
prob <- prob/sum(prob)
barplot(prob)
entropy::entropy(prob)
ave_cor
ave_cor
cor_mat <- cor(rmultinom(1000, 2 * 50, prob))
sparse_cor <- function(x) {
n <- nrow(x)
m <- ncol(x)
# non-empty rows
ii <- unique(x@i) + 1
Ex <- colMeans(x)
#centralize
nozero <- as.vector(x[ii, ]) - rep(Ex, each = length(ii))
covmat <- (crossprod(matrix(nozero, ncol = m)) +
crossprod(t(Ex)) * (n - length(ii))) / (n - 1)
sdvec <- sqrt(diag(covmat))
return(covmat / crossprod(t(sdvec)))
}
cor_mat <- sparse_cor(rmultinom(1000, 2 * 50, prob))
cor_mat <- cor(rmultinom(1000, 2 * 50, prob))
diag(cor_mat) <- NA
mean(cor_mat, na.rm = TRUE)
system.time(cor(rmultinom(1000, 2 * 50, prob)))
system.time(replicate(100,cor(rmultinom(1000, 2 * 50, prob))))
system.time(replicate(100,sparse_cor(as(rmultinom(1000, 2 * 50, prob)),"dgCMatrix")))
system.time(replicate(100,sparse_cor(as(rmultinom(1000, 2 * 50, prob)),"SparseMatrix")))
library(as)
library(Matrix)
as
system.time(replicate(100,sparse_cor(as(rmultinom(1000, 2 * 50, prob)),"dgCMatrix")))
system.time(replicate(100,sparse_cor(as(rmultinom(1000, 2 * 50, prob),"dgCMatrix"))))
prob <- dnorm(1:10000/10000, sd = runif(1,0,1))
prob <- prob/sum(prob)
system.time(replicate(100,sparse_cor(as(rmultinom(1000, 200, prob),"dgCMatrix"))))
system.time(replicate(100,sparse_cor(as(rmultinom(100, 200, prob),"dgCMatrix"))))
system.time(replicate(100,cor(rmultinom(100, 200, prob))))
N=1000
Ent <- numeric(N)
Cth <- numeric(N)
set.seed(1)
for(i in 1:N){
prob <- dnorm(1:1000/1000, sd = runif(1,0,1))
prob <- prob/sum(prob)
barplot(prob)
Ent[i] <- entropy::entropy(prob)
cor_mat <- cor(rmultinom(100, 2 * 50, prob))
diag(cor_mat) <- NA
mean(cor_mat, na.rm = TRUE)
Cth[i] <- mean(cor_mat, na.rm = TRUE)
}
N=1000
Ent <- numeric(N)
Cth <- numeric(N)
set.seed(1)
for(i in 1:N){
prob <- dnorm(1:1000/1000, sd = runif(1,0,1))
prob <- prob/sum(prob)
#barplot(prob)
Ent[i] <- entropy::entropy(prob)
cor_mat <- cor(rmultinom(100, 2 * 50, prob))
diag(cor_mat) <- NA
mean(cor_mat, na.rm = TRUE)
Cth[i] <- mean(cor_mat, na.rm = TRUE)
}
plot(Cth~Ent)
N=1000
P=10000
size=200
Ent <- numeric(N)
Cth <- numeric(N)
set.seed(1)
for(i in 1:N){
prob <- dnorm(1:P/P, sd = runif(1,0,1))
prob <- prob/sum(prob)
#barplot(prob)
Ent[i] <- entropy::entropy(prob)
cor_mat <- cor(rmultinom(100, size, prob))
diag(cor_mat) <- NA
mean(cor_mat, na.rm = TRUE)
Cth[i] <- mean(cor_mat, na.rm = TRUE)
}
plot(Cth~Ent)
plot(Cth~Ent)
size
str(prob)
cor_mat <- cor(rmultinom(100, size, prob))
diag(cor_mat) <- NA
mean(cor_mat, na.rm = TRUE)
mean(unlist(replicate(1000, cor(
rmultinom(1, size, null_prob),
rmultinom(1, 2 * background_threshold, prob)
))))
mean(unlist(replicate(1000, cor(
rmultinom(1, size, prob),
rmultinom(1, size, prob)
))))
system.time(cor_mat <- cor(rmultinom(100, size, prob))
diag(cor_mat) <- NA
mean(cor_mat, na.rm = TRUE))
st <- sys.time()
st <- Sys.time()
cor_mat <- cor(rmultinom(100, size, prob))
diag(cor_mat) <- NA
mean(cor_mat, na.rm = TRUE)
Sys.time()-st
st <- Sys.time()
mean(unlist(replicate(1000, cor(
rmultinom(1, size, prob),
rmultinom(1, size, prob)
))))
Sys.time()-st
entropy::entropy(prob)
log(-1)
c_entropy <- function(prob){
prob[prob==0] <- 1
-sum(prob*log(prob),na.rm = T)
}
c_entropy(prob)
SEED=2019
RED="#FF9999"
BLUE="#56B4E9"
GREEN="#009E73"
YELLOW="#F0E442"
library(scCB2)
suppressMessages(library(DropletUtils))
library(ggplot2)
library(Rtsne)
suppressMessages(library(dendextend))
suppressMessages(library(Matrix))
library(grid)
suppressMessages(library(edgeR))
library(reshape2)
suppressMessages(library(gplots))
library(scran)
library(irlba)
library(scater)
source("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/functions_forReal.R")
load("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/Alzheimer.RData")
#load("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/Alzheimer_sub.RData")
Groups <- as.integer(gsub(".*-([d]*)","\\1",colnames(Alz_r)))
#AlzSub_r <- Alz_r[,grep("-[9,10]\\>",colnames(Alz_r))]
#Calc_retain(AlzSub_r,lower=100)
#knee=8813
#inflection=337
#barcodeRanks(Alz_r,100)@metadata
#wrong knee=9498
#Alz_knee <- Calc_retain(Alz_r,lower=100)$knee #8142
#plot(sort(colSums(AlzSub_r),decreasing = T),log="xy",type="l")
##CB2+ED
# Alz_CB2 <- NULL
# Alz_ED <- NULL
# RETAIN <- NULL
# LARGE <-
#
# for(i in unique(Groups)){
#     AlzSub_r <- Alz_r[,Groups==i]
#
#     print(paste0("Group ",i))
#     brank <- Calc_retain(AlzSub_r, lower = 100)
#     #check convergence of knee point
#     repeat{
#         retain_temp <- brank$knee
#         #print(paste0("CB2:",retain_temp))
#         brank <- Calc_retain(AlzSub_r, brank$inflection + 100)
#         if(brank$knee==retain_temp) break
#     }
#
#     if (is.null(retain_temp)) {
#         stop("Failed to calculate knee point. Probably not enough barcodes.")
#     }
#
#     #print(paste0("ED:",barcodeRanks(AlzSub_r,100)@metadata$knee))
#     retain <- retain_temp
#     RETAIN <- c(RETAIN,retain)
# #     set.seed(SEED)
# #     AlzSub_CB2Out <- CB2FindCell(AlzSub_r,Ncores = 6,retain = retain)
# #     AlzSub_CB2 <- GetCellMat(AlzSub_CB2Out)
# #     Alz_CB2 <- cbind(Alz_CB2,AlzSub_CB2)
# #
# #     set.seed(SEED)
# #     eOut <- emptyDrops(AlzSub_r,lower=100, retain = retain)
# #     AlzSub_ED <- AlzSub_r[,ifelse(is.na(eOut$FDR),FALSE,eOut$FDR<=0.01)]
# #     Alz_ED <- cbind(Alz_ED,AlzSub_ED)
# #
# #
# #     rm(AlzSub_CB2Out,AlzSub_CB2,eOut,AlzSub_ED)
# }
#
# LARGE <- NULL
# for(i in unique(Groups)){
#     AlzSub_r <- Alz_r[,Groups==i]
#     large_temp <- colSums(AlzSub_r)>=RETAIN[i]
#     LARGE <- c(LARGE,colnames(AlzSub_r)[large_temp])
# }
#
# save(Alz_CB2,Alz_ED,RETAIN,LARGE,file = "~/Google Drive/Hallu/codes/ckgroup/DropletUtils/threshold_100/package/Alz_CB2_ED.RData")
# set.seed(SEED)
# Alz_CB2Out <- CB2FindCell(Alz_r,Ncores = 6,retain = Alz_knee)
# Alz_CB2 <- GetCellMat(Alz_CB2Out)
#
#
# set.seed(SEED)
# eOut <- emptyDrops(Alz_r,lower=100, retain = Alz_knee)
# Alz_ED <- Alz_r[,ifelse(is.na(eOut$FDR),FALSE,eOut$FDR<=0.01)]
load("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/threshold_100/package/Alz_CB2_ED.RData")
install.packages("MulticoreTSNE")
BiocManager::install("MulticoreTSNE")
BiocManager::install("Multicore-TSNE")
BiocManager::install("scanpy")
SEED=2019
RED="#FF9999"
BLUE="#56B4E9"
GREEN="#009E73"
YELLOW="#F0E442"
library(scCB2)
suppressMessages(library(DropletUtils))
library(ggplot2)
library(Rtsne)
suppressMessages(library(dendextend))
suppressMessages(library(Matrix))
library(grid)
suppressMessages(library(edgeR))
library(reshape2)
suppressMessages(library(gplots))
library(scran)
library(irlba)
library(scater)
library(Seurat)
source("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/functions_forReal.R")
load("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/Alzheimer.RData")
Calc_retain(Alz_r,lower=100)
#Calc_retain(AlzSub_r,lower=100)
#knee=8813
#inflection=337
#barcodeRanks(Alz_r,100)@metadata
#wrong knee=9498
Alz_knee <- Calc_retain(Alz_r,lower=100)$knee #8136
set.seed(SEED)
AlzAll_CB2Out <- CB2FindCell(Alz_r,Ncores = 6,retain = Alz_knee)
AlzAll_CB2 <- GetCellMat(AlzAll_CB2Out)
set.seed(SEED)
eOut <- emptyDrops(Alz_r,lower=100, retain = Alz_knee)
AlzAll_ED <- Alz_r[,ifelse(is.na(eOut$FDR),FALSE,eOut$FDR<=0.01)]
save(AlzAll_CB2,AlzAll_ED,file = "~/Google Drive/Hallu/codes/ckgroup/DropletUtils/threshold_100/package/AlzAll_CB2_ED.RData")
diff_Alz <- barcode_diff(AlzAll_CB2,AlzAll_ED)
View(AlzAll_ED)
SEED=2019
RED="#FF9999"
BLUE="#56B4E9"
GREEN="#009E73"
YELLOW="#F0E442"
library(scCB2)
suppressMessages(library(DropletUtils))
library(ggplot2)
library(Rtsne)
suppressMessages(library(dendextend))
suppressMessages(library(Matrix))
library(grid)
suppressMessages(library(edgeR))
library(reshape2)
suppressMessages(library(gplots))
library(scran)
library(irlba)
library(scater)
library(Seurat)
source("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/functions_forReal.R")
load("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/Alzheimer.RData")
#load("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/Alzheimer_sub.RData")
Groups <- as.integer(gsub(".*-([d]*)","\\1",colnames(Alz_r)))
#AlzSub_r <- Alz_r[,grep("-[9,10]\\>",colnames(Alz_r))]
#Calc_retain(AlzSub_r,lower=100)
#knee=8813
#inflection=337
#barcodeRanks(Alz_r,100)@metadata
#wrong knee=9498
Alz_knee <- Calc_retain(Alz_r,lower=100)$knee #8136
SEED=2019
RED="#FF9999"
BLUE="#56B4E9"
GREEN="#009E73"
YELLOW="#F0E442"
library(scCB2)
suppressMessages(library(DropletUtils))
library(ggplot2)
library(Rtsne)
suppressMessages(library(dendextend))
suppressMessages(library(Matrix))
library(grid)
suppressMessages(library(edgeR))
library(reshape2)
suppressMessages(library(gplots))
library(scran)
library(irlba)
library(scater)
library(Seurat)
source("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/functions_forReal.R")
load("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/Alzheimer.RData")
#load("~/Google Drive/Hallu/codes/ckgroup/DropletUtils/Alzheimer_sub.RData")
Groups <- as.integer(gsub(".*-([d]*)","\\1",colnames(Alz_r)))
#AlzSub_r <- Alz_r[,grep("-[9,10]\\>",colnames(Alz_r))]
#Calc_retain(AlzSub_r,lower=100)
#knee=8813
#inflection=337
#barcodeRanks(Alz_r,100)@metadata
#wrong knee=9498
Alz_knee <- Calc_retain(Alz_r,lower=100)$knee #8136
Groups <- as.integer(gsub(".*-([d]*)","\\1",colnames(Alz_r)))
i=2
Alz1Sub_r <- Alz1_r[,Groups==i]
Calc_retain(Alz_r,lower=100)$knee
barcodeRanks(Alz_r,100)$metadata
barcodeRanks(Alz_r,100)@metadata
AlzSub_r <- Alz_r[,Groups==i]
print(paste0("Group ",i))
brank <- Calc_retain(AlzSub_r, lower = 100)
#check convergence of knee point
repeat{
retain_temp <- brank$knee
#print(paste0("CB2:",retain_temp))
brank <- Calc_retain(AlzSub_r, brank$inflection + 100)
if(brank$knee==retain_temp) break
}
if (is.null(retain_temp)) {
stop("Failed to calculate knee point. Probably not enough barcodes.")
}
#print(paste0("ED:",barcodeRanks(AlzSub_r,100)@metadata$knee))
retain <- retain_temp
retain
set.seed(SEED)
AlzSub_CB2Out <- CB2FindCell(AlzSub_r,Ncores = 6,retain = retain)
split(1:4020, ceiling(1:4020) / 1000))
split(1:4020, ceiling(1:4020 / 1000))
setwd("~/Google Drive/GitHub/scCB2/scCB2")
document()
library(devtools)
document()
check()
BiocCheck::BiocCheck()
document()
?scCB2
build()
build()
devtools::install_github("zijianni/scCB2")
devtools::install_github("zijianni/scCB2")
devtools::install_github("zijianni/scCB2")
